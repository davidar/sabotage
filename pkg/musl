[vars]
pkgver=16
desc='the musl C standard library (libc)'
no_unlink=1

[deps]
musl-tarball

[deps.stage1]
gcc6

[build]
tar xf "$C"/musl-1.2.5.tar.gz && cd musl-1.2.5

if test "$STAGE" = "0" ; then
	export CC=$R/bin/gcc
	cfgflags=--enable-gcc-wrapper
fi

patch -p1 < "$K"/musl-1.1.18-armasm.patch

CFLAGS="$optcflags" \
./configure --prefix=$butch_prefix --syslibdir=$butch_prefix/lib $cfgflags

# enable debug libc when DEBUGBUILD is set
[ ! -z "$DEBUGBUILD" ] && echo "CFLAGS += -O0 -g" >> config.mak
[ ! -z "$DEBUGBUILD" ] && echo "CFLAGS_ALL_SHARED += -O0 -g" >> config.mak

make -j$MAKE_THREADS

if test "$A" = x86_64 && test "$option_amd_memcpy" = 1 ; then
# use AMD memcpy with AVX. this is the fastest memcpy impl i've seen for x86_64
# use this option with consideration, because it has several issues:
# this will make all your static linked binaries GPL2+ instead of MIT,
# considerably bigger, and your static binaries won't work on CPUs without AVX.
# therefore we put this only into libc.so, but not libc.a
# ref: https://github.com/rofl0r/memcpy-test/commit/fe1016aedcfd117aebc2193eba3184cc2023eac9
patch -p1 < "$K"/musl-improved-memcpy.patch
touch obj/src/string/x86_64/memcpy.o
touch obj/src/string/x86_64/memmove.o
touch lib/libc.a
make lib/libc.so
fi

make DESTDIR="$butch_install_dir" install

[ "$butch_prefix" = "/" ] && butch_prefix=
dest=$butch_install_dir$butch_prefix
mkdir -p "$dest"/bin
ln -sf  ../lib/libc.so "$dest"/bin/ldd

# turn absolute path in ld-musl-xxx.so.1 symlink into relative
ln -sf libc.so "$dest"/lib/ld-musl-*.so.1

musl_gcc="$dest/bin/musl-gcc"

if test "$STAGE" = "0" ; then
# generate a musl-gcc wrapper that is aware of our directory layout...
cat << EOF > "$dest"/bin/musl-gcc
#!/bin/sh
self=\`readlink -f "\$0"\`
selfdir=\`dirname "\$self"\`/../../../bin
exec "\$selfdir/rawcc" "\$@" -specs "\$selfdir/../lib/musl-gcc.specs"
EOF
# fix paths in spec file
sed -i 's,/lib,'"$butch_root_dir"'/lib,g' "$dest"/lib/musl-gcc.specs
sed -i 's,/include,'"$butch_root_dir"'/include,g' "$dest"/lib/musl-gcc.specs
sed -i 's,/lib/ld-musl,/xxx/xxx/,' "$dest"/lib/musl-gcc.specs
else
cp "$K/musl-gcc" "$musl_gcc"
sed -i "s,AAAA,$A," "$musl_gcc"
sed -i "s,PPPP,$butch_prefix," "$musl_gcc"
fi
chmod +x "$musl_gcc"

#create dynlinker path file which only contains /lib
#this should speed up dynamic linker path search
mkdir -p "$dest"/etc
printf "%s\n" "$butch_prefix"/lib > "$dest"/etc/ld-musl-$A.path

## fix ssp on i?86
case "$A" in
	i?86)
		$CC $optldflags $optcflags -c "$K/__stack_chk_fail_local.c" -o __stack_chk_fail_local.o
		"$CROSS_COMPILE"ar rcs "$dest/lib/libssp_nonshared.a" __stack_chk_fail_local.o
	;;
esac
